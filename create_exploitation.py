import streamlit as st
from global_var import *
from functions import generar_df_desde_diccionario_parcelas

        
def create_exploitation():
    
    st.header('Nueva explotación')
    
    # Check for already saved fields in explitation
    try:
        exploitation = st.session_state.exploitation
    except:
        exploitation = {}
    
    # Set new fields (name and surface)
    c1 , c2 , c3 = st.columns(3)
    
    field = c1.text_input(field_input)
    surface = c2.number_input(surface_input , 0.)
    
    c3.write('\n')     # Insert new field in exploitation dictionary if button pressed (and name and surface set)
    add_field = c3.button('AÑADIR PARCELA')
    if add_field and (len(field) != 0) and (surface != 0.) :
        exploitation.update({field : surface})
        
        # Set the new dictionary as sesssion state so it can be re-read with the new values
        st.session_state.exploitation = exploitation
    
def generate_and_download_df(): 
    # Display dataframe and download buttom if fields in exploitation
    try:
        # Display dataframe
        df = generar_df_desde_diccionario_parcelas(st.session_state.exploitation)
        st.session_state.exploitation_df = df
        st.write(df)
        
        # Set exploitation/file name
        exploitation_name = st.text_input(exploitation_name_input)
        st.session_state.exploitation_name = exploitation_name
        
        # Download exploitation dataframe
        try:
            exploitation_df_encoded = df.to_csv(index=False , sep=';').encode('latin_1')
            st.download_button(download_empty_new_exploitation , exploitation_df_encoded , exploitation_name + '.csv' , mime='text/csv')
        except:
            st.warning(error_downloading_df)
        
    except:
        st.warning(no_field_warning)